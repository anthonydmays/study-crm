admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8081
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          route_config:
            name: local_route
            virtual_hosts:
            - name: fe_host
              domains: ["local.studycrm.com"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: studycrm_fe
                  timeout: 0s
            - name: api_service_host
              domains: ["*"]
              routes:
              - match:
                  prefix: "/login"
                route:
                  cluster: auth_service
                  timeout: 0s
              - match:
                  prefix: "/oauth2"
                route:
                  cluster: auth_service
                  timeout: 0s
              - match:
                  prefix: "/.well-known"
                route:
                  cluster: auth_service
                  timeout: 0s
              - match:
                  prefix: "/logout"
                route:
                  cluster: auth_service
                  timeout: 0s
              - match:
                  prefix: "/organizations"
                route:
                  cluster: organization_service
                  timeout: 0s
              - match:
                  prefix: "/docs/organizations"
                route:
                  prefix_rewrite: "/v3/api-docs"
                  cluster: organization_service
                  timeout: 0s
              cors:
                allow_origin_string_match:
                  - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
          http_filters:
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: studycrm_fe
      connect_timeout: 1.25s
      type: strict_dns
      dns_lookup_family: v4_only
      lb_policy: round_robin
      # Use address: 0.0.0.0 when running with Envoy directly.
      load_assignment:
        cluster_name: cluster_0
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: host.docker.internal
                      port_value: 3000
    - name: auth_service
      connect_timeout: 1.25s
      type: strict_dns
      dns_lookup_family: v4_only
      lb_policy: round_robin
      # Use address: 0.0.0.0 when running with Envoy directly.
      load_assignment:
        cluster_name: cluster_0
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: auth-service
                      port_value: 8081
              - endpoint:
                  address:
                    socket_address:
                      address: host.docker.internal
                      port_value: 8081
    - name: organization_service
      connect_timeout: 1.25s
      type: strict_dns
      dns_lookup_family: v4_only
      lb_policy: round_robin
      # Use address: 0.0.0.0 when running with Envoy directly.
      load_assignment:
        cluster_name: cluster_0
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: organization-service
                      port_value: 8082
              - endpoint:
                  address:
                    socket_address:
                      address: host.docker.internal
                      port_value: 8082